<tool id="vcf_calc" name="Calculate statistics with VCF" version="1.0.0.1">

  <description>files using vcftools</description>

  <command><![CDATA[
  python $__tool_directory__/vcf_calc.py
          --vcf $input
          --out $output
          --overwrite
          --calc-statistic $stat.calc_statistic

          #if $stat.calc_statistic in ['windowed-weir-fst', 'weir-fst', 'het-fis']
              #if $stat.pop.assign_type == 'model_file'
                --model-file $stat.pop.model_file
                --model $stat.pop.model
              #end if
              #if $stat.pop.assign_type == 'pop_file'
                #for $pop_file in $stat.pop.pop_files
                  --pop-file $pop_file
                #end for
              #end if
          #end if

          #if $stat.calc_statistic in ['TajimaD', 'window-pi', 'site-pi', 'freq', 'het-fit']
            #if $stat.indv.assign_type == 'model_file'
              #if $stat.indv.model_file
                --model-file $stat.indv.model_file
                --model $stat.indv.model
              #end if
            #end if
            #if $stat.indv.assign_type == 'indv_data'
              #if $stat.indv.filter_include_indv_file
                --filter-include-indv-file $stat.indv.filter_include_indv_file
              #end if
              #if $stat.indv.filter_exclude_indv_file
                --filter-exclude-indv-file $stat.indv.filter_exclude_indv_file
              #end if
              #if $stat.indv.filter_include_indv
                #set include_indvs = [include_indv.strip() for include_indv in str($stat.indv.filter_include_indv).split(",")]
                --filter-include-indv $include_indvs
              #end if
              #if $stat.indv.filter_exclude_indv
                #set exclude_indvs = [exclude_indv.strip() for exclude_indv in str($stat.indv.filter_exclude_indv).split(",")]
                --filter-exclude-indv $exclude_indvs
              #end if
            #end if
          #end if

          #if $stat.calc_statistic in ['windowed-weir-fst', 'window-pi', 'TajimaD']
            --statistic-window-size $stat.statistic_window_size
          #end if

          #if $stat.calc_statistic in ['windowed-weir-fst', 'window-pi']
            --statistic-window-step $stat.statistic_window_step
          #end if

          #if $pos_file.filter_include_positions
            --filter-include-positions $pos_file.filter_include_positions
          #end if

          #if $pos_file.filter_exclude_positions
            --filter-exclude-positions $pos_file.filter_exclude_positions
          #end if

          #if $pos_file.filter_include_bed
            --filter-include-bed $pos_file.filter_include_bed
          #end if

          #if $pos_file.filter_exclude_bed
            --filter-exclude-bed $pos_file.filter_exclude_bed
          #end if

  ]]></command>

  <inputs>
    <param format="vcf,vcf_bgzip,bcf" name="input" type="data" label="VCF Input" />

    <conditional name="stat">

      <param name="calc_statistic" type="select" label="Statistic to calculate" refresh_on_change='True'>
        <option value="windowed-weir-fst" selected="True" >Windowed Fst</option>
        <option value="weir-fst">Fst</option>
        <option value="TajimaD">Tajima's D</option>
        <option value="window-pi">Windowed Nucleotide Diversity</option>
        <option value="site-pi">Nucleotide Diversity</option>
        <option value="freq">Allele Frequency</option>
        <option value="het-fit">Heterozygosity (Fit)</option>
        <option value="het-fis">Heterozygosity (Fis)</option>
      </param>

      <when value="windowed-weir-fst">

        <conditional name="pop">
          <param name="assign_type" type="select" label="Population assignment method" refresh_on_change='True'>
            <option value="model_file" selected="True" >Model File</option>
            <option value="pop_file">Population File(s)</option>
          </param>
          <when value="model_file">
            <param format="model" name="model_file" type="data" label="Model File"/>
            <param name="model" type="select" label= "Model" refresh_on_change="True">
              <options>
                <filter type="data_meta" ref="model_file" key="models"/>
              </options>
            </param>
          </when>
          <when value="pop_file">
            <param format="txt,tabular" name="pop_files" type="data" label="Population File(s)" multiple="True" help="Cannot be used when specifying a model"/>
          </when>
        </conditional>

        <param name="statistic_window_size" type="integer" value="10000" label="Window size"/>
        <param name="statistic_window_step" type="integer" value="20000" label="Step size between windows"/>
      </when>

      <when value="weir-fst">

        <conditional name="pop">
          <param name="assign_type" type="select" label="Population assignment method" refresh_on_change='True'>
            <option value="model_file" selected="True" >Model File</option>
            <option value="pop_file">Population File(s)</option>
          </param>
          <when value="model_file">
            <param format="model" name="model_file" type="data" label="Model File"/>
            <param name="model" type="select" label= "Model" refresh_on_change="True">
              <options>
                <filter type="data_meta" ref="model_file" key="models"/>
              </options>
            </param>
          </when>
          <when value="pop_file">
            <param format="txt,tabular" name="pop_files" type="data" label="Population File(s)" multiple="True" help="Cannot be used when specifying a model"/>
          </when>
        </conditional>

      </when>

      <when value="het-fis">

        <conditional name="pop">
          <param name="assign_type" type="select" label="Population assignment method" refresh_on_change='True'>
            <option value="model_file" selected="True" >Model File</option>
            <option value="pop_file">Population File(s)</option>
          </param>
          <when value="model_file">
            <param format="model" name="model_file" type="data" label="Model File"/>
            <param name="model" type="select" label= "Model" refresh_on_change="True">
              <options>
                <filter type="data_meta" ref="model_file" key="models"/>
              </options>
            </param>
          </when>
          <when value="pop_file">
            <param format="txt,tabular" name="pop_files" type="data" label="Population File(s)" multiple="True" help="Cannot be used when specifying a model"/>
          </when>
        </conditional>

      </when>

      <when value="window-pi">

        <param name="statistic_window_size" type="integer" value="10000" label="Window size"/>
        <param name="statistic_window_step" type="integer" value="20000" label="Step size between windows"/>

        <conditional name="indv">
          <param name="assign_type" type="select" label="Individuals-filter method" refresh_on_change='True'>
            <option value="model_file" selected="True" >Model File</option>
            <option value="indv_data">Individuals or Individual File(s)</option>
          </param>
          <when value="model_file">
            <param format="model" name="model_file" type="data" label="Model File" optional="True"/>
            <param name="model" type="select" label= "Model" refresh_on_change="True" optional="True">
              <options>
                <filter type="data_meta" ref="model_file" key="models"/>
              </options>
            </param>
          </when>
          <when value="indv_data">
            <param format="txt,tabular" name="filter_include_indv_file" type="data" label="File of individuals to include" optional="True"/>
            <param format="txt,tabular" name="filter_exclude_indv_file" type="data" label="File of individuals to exclude" optional="True"/>

            <param name="filter_include_indv" type="text" label="Individual to include" optional="True" area="True" help="Comma separate multiple entries">
              <sanitizer>
                <valid initial="string.printable">
                  <remove value="&#10;"/>
                </valid>
                <mapping initial="none">
                  <add source="&#10;" target=","/>
                </mapping>
              </sanitizer>
            </param>

            <param name="filter_exclude_indv" type="text" label="Individual to exclude" optional="True" area="True" help="Comma separate multiple entries">
              <sanitizer>
                <valid initial="string.printable">
                  <remove value="&#10;"/>
                </valid>
                <mapping initial="none">
                  <add source="&#10;" target=","/>
                </mapping>
              </sanitizer>
            </param>
          </when>
        </conditional>

      </when>

      <when value="TajimaD">

        <param name="statistic_window_size" type="integer" value="10000" label="Window size"/>

        <conditional name="indv">
          <param name="assign_type" type="select" label="Individuals-filter method" refresh_on_change='True'>
            <option value="model_file" selected="True" >Model File</option>
            <option value="indv_data">Individuals or Individual File(s)</option>
          </param>
          <when value="model_file">
            <param format="model" name="model_file" type="data" label="Model File" optional="True"/>
            <param name="model" type="select" label= "Model" refresh_on_change="True" optional="True">
              <options>
                <filter type="data_meta" ref="model_file" key="models"/>
              </options>
            </param>
          </when>
          <when value="indv_data">
            <param format="txt,tabular" name="filter_include_indv_file" type="data" label="File of individuals to include" optional="True"/>
            <param format="txt,tabular" name="filter_exclude_indv_file" type="data" label="File of individuals to exclude" optional="True"/>

            <param name="filter_include_indv" type="text" label="Individual to include" optional="True" area="True" help="Comma separate multiple entries">
              <sanitizer>
                <valid initial="string.printable">
                  <remove value="&#10;"/>
                </valid>
                <mapping initial="none">
                  <add source="&#10;" target=","/>
                </mapping>
              </sanitizer>
            </param>

            <param name="filter_exclude_indv" type="text" label="Individual to exclude" optional="True" area="True" help="Comma separate multiple entries">
              <sanitizer>
                <valid initial="string.printable">
                  <remove value="&#10;"/>
                </valid>
                <mapping initial="none">
                  <add source="&#10;" target=","/>
                </mapping>
              </sanitizer>
            </param>
          </when>
        </conditional>

      </when>

      <when value="site-pi">

        <conditional name="indv">
          <param name="assign_type" type="select" label="Individuals-filter method" refresh_on_change='True'>
            <option value="model_file" selected="True" >Model File</option>
            <option value="indv_data">Individuals or Individual File(s)</option>
          </param>
          <when value="model_file">
            <param format="model" name="model_file" type="data" label="Model File" optional="True"/>
            <param name="model" type="select" label= "Model" refresh_on_change="True" optional="True">
              <options>
                <filter type="data_meta" ref="model_file" key="models"/>
              </options>
            </param>
          </when>
          <when value="indv_data">
            <param format="txt,tabular" name="filter_include_indv_file" type="data" label="File of individuals to include" optional="True"/>
            <param format="txt,tabular" name="filter_exclude_indv_file" type="data" label="File of individuals to exclude" optional="True"/>

            <param name="filter_include_indv" type="text" label="Individual to include" optional="True" area="True" help="Comma separate multiple entries">
              <sanitizer>
                <valid initial="string.printable">
                  <remove value="&#10;"/>
                </valid>
                <mapping initial="none">
                  <add source="&#10;" target=","/>
                </mapping>
              </sanitizer>
            </param>

            <param name="filter_exclude_indv" type="text" label="Individual to exclude" optional="True" area="True" help="Comma separate multiple entries">
              <sanitizer>
                <valid initial="string.printable">
                  <remove value="&#10;"/>
                </valid>
                <mapping initial="none">
                  <add source="&#10;" target=","/>
                </mapping>
              </sanitizer>
            </param>
          </when>
        </conditional>

      </when>

      <when value="freq">

        <conditional name="indv">
          <param name="assign_type" type="select" label="Individuals-filter method" refresh_on_change='True'>
            <option value="model_file" selected="True" >Model File</option>
            <option value="indv_data">Individuals or Individual File(s)</option>
          </param>
          <when value="model_file">
            <param format="model" name="model_file" type="data" label="Model File" optional="True"/>
            <param name="model" type="select" label= "Model" refresh_on_change="True" optional="True">
              <options>
                <filter type="data_meta" ref="model_file" key="models"/>
              </options>
            </param>
          </when>
          <when value="indv_data">
            <param format="txt,tabular" name="filter_include_indv_file" type="data" label="File of individuals to include" optional="True"/>
            <param format="txt,tabular" name="filter_exclude_indv_file" type="data" label="File of individuals to exclude" optional="True"/>

            <param name="filter_include_indv" type="text" label="Individual to include" optional="True" area="True" help="Comma separate multiple entries">
              <sanitizer>
                <valid initial="string.printable">
                  <remove value="&#10;"/>
                </valid>
                <mapping initial="none">
                  <add source="&#10;" target=","/>
                </mapping>
              </sanitizer>
            </param>

            <param name="filter_exclude_indv" type="text" label="Individual to exclude" optional="True" area="True" help="Comma separate multiple entries">
              <sanitizer>
                <valid initial="string.printable">
                  <remove value="&#10;"/>
                </valid>
                <mapping initial="none">
                  <add source="&#10;" target=","/>
                </mapping>
              </sanitizer>
            </param>
          </when>
        </conditional>

      </when>

      <when value="het-fit">

        <conditional name="indv">
          <param name="assign_type" type="select" label="Individuals-filter method" refresh_on_change='True'>
            <option value="model_file" selected="True" >Model File</option>
            <option value="indv_data">Individuals or Individual File(s)</option>
          </param>
          <when value="model_file">
            <param format="model" name="model_file" type="data" label="Model File" optional="True"/>
            <param name="model" type="select" label= "Model" refresh_on_change="True" optional="True">
              <options>
                <filter type="data_meta" ref="model_file" key="models"/>
              </options>
            </param>
          </when>
          <when value="indv_data">
            <param format="txt,tabular" name="filter_include_indv_file" type="data" label="File of individuals to include" optional="True"/>
            <param format="txt,tabular" name="filter_exclude_indv_file" type="data" label="File of individuals to exclude" optional="True"/>

            <param name="filter_include_indv" type="text" label="Individual to include" optional="True" area="True" help="Comma separate multiple entries">
              <sanitizer>
                <valid initial="string.printable">
                  <remove value="&#10;"/>
                </valid>
                <mapping initial="none">
                  <add source="&#10;" target=","/>
                </mapping>
              </sanitizer>
            </param>

            <param name="filter_exclude_indv" type="text" label="Individual to exclude" optional="True" area="True" help="Comma separate multiple entries">
              <sanitizer>
                <valid initial="string.printable">
                  <remove value="&#10;"/>
                </valid>
                <mapping initial="none">
                  <add source="&#10;" target=","/>
                </mapping>
              </sanitizer>
            </param>
          </when>
        </conditional>

      </when>
    </conditional>

    <section name="filter" title="Additional Filters" expanded="False">
      <param format="tabular" name="filter_include_positions" type="data" label="Include Positions File" optional="True" help="Tab-separated file of chromosomes and positions"/>
      <param format="tabular" name="filter_exclude_positions" type="data" label="Exclude Positions File" optional="True" help="Tab-separated file of chromosomes and positions"/>
      <param format="bed" name="filter_include_bed" type="data" label="Include Positions File (BED format)" optional="True"/>
      <param format="bed" name="filter_exclude_bed" type="data" label="Exclude Positions File (BED format)" optional="True"/>
    </section>
  </inputs>

  <outputs>

    <data format="tabular" name="output">
      <!--
      <filter> not stat['pop']['model_file'].metadata.npop_dict[stat['pop']['model']] &gt;= 3 or (stat['calc_statistic'] not in ["windowed-weir-fst", "weir-fst"]) </filter>
      -->
      <filter>
      ((
      stat['calc_statistic'] not in ["windowed-weir-fst", "weir-fst"] or not
      ((stat['pop']['assign_type'] == 'pop_file' and len(stat['pop']['pop_files']) &gt;= 3) or
      (stat['pop']['assign_type'] == 'model_file' and stat['pop']['model_file'].metadata.npop_dict[stat['pop']['model']] &gt;= 3))
      ))
      </filter>
    </data>

    <collection type="list" name="output_list">
      <filter>
        ((
        stat['calc_statistic'] in ["windowed-weir-fst", "weir-fst"] and
        ((stat['pop']['assign_type'] == 'pop_file' and len(stat['pop']['pop_files']) &gt;= 3) or
        (stat['pop']['assign_type'] == 'model_file' and stat['pop']['model_file'].metadata.npop_dict[stat['pop']['model']] &gt;= 3))
        ))
      </filter>
      <discover_datasets pattern="(?P&lt;name&gt;.*)" directory="Statistic_Files" format="tabular"/>
    </collection>






  </outputs>
  <help>
  <![CDATA[
    **General Information**

    VCF Statistics utilize functions from vcftools to create statistical data of the input files. The input can be in the format of vcf, vcf_bgzip, or bcf. 

    **Statistics**
    
    FST: this option is used to calculate an Fst estimate from Weir and Cockerham’s 1984 paper. This is the preferred calculation of Fst. The provided file must contain a list of individuals (one individual per line) from the VCF file that correspond to one population.

    Windowed FST: this option is used to do the Fst calculations on a windowed basis instead of a per-site basis. These arguments specify the desired window size and the desired step size between windows.

    Tajima's D: this option output Tajima's D statistic in bins with size of the specified number.

    Nucleotide Diversity: this option measures nucleotide divergency on a per-site basis.

    Windowed Nucleotide Diversity: this option measures the nucleotide diversity in windows, with the number provided as the window size.

    Allele Frequency: this option is used to find the allele frequency for each site.

    Heterozygosity: this option calculates the measure of heterozygosity on a per-individual basis. Specfically, the inbreeding coefficient, F, is estimated for each individual using a method of moments.

    detailed information on vcftools and the statistics: http://vcftools.sourceforge.net/man_latest.html

  ]]>
  </help>

</tool>
